/*
[멘토링]
현수네 반 선생님은 반 학생들의 수학점수를 향상시키기 위해 멘토링 시스템을 만들려고 합니다.
멘토링은 멘토와 멘티가 한 짝이 되어 멘토가 멘티의 수학공부를 도와주는 것입니다.
선생님은 m회의 수학 테스트 등수를 통해 멘토와 멘티를 정합니다.
만약 A학생이 멘토이고 B학생이 멘티인 짝이 있다면 A학생은 m번의 수학테스트에서 모두 B학생보다 등수가 앞서야 합니다.
m번의 수학 성적이 주어지면 멘토와 멘티가 되는 짝을 만들 수 있는 경우가 총 몇 가지인지 출력하는 프로그램을 작성하세요.
*/

/*
🥸 예상 풀이법
1. 1번-4번 학생에 대해 indexof를 사용한 반복문을 돌려 [1회차 성적, 2회차 성적, 3회차 성적]이 담긴 배열을 추출한다.
2. 1번 학생부터 모든 요소가 자신보다 다 낮은 학생이 있는지 찾는다.
3. 해당되는 경우가 발생하면 flag변수에 1을 더한다.
*/

const solution = (test) => {
  let answer = 0,
    tmp = [];
  m = test.length; // 시험 횟수
  n = test[0].length; // 학생 수

  // 멘토 기준
  for (let i = 0; i <= n; i++) {
    // 멘티 기준
    for (let j = 0; j <= n; j++) {
      // 시험 횟수
      let cnt = 0; // 멘토 멘티가 정해진 후 초기화
      for (let k = 0; k < m; k++) {
        let pi = (pj = 0);
        // 등수
        for (let s = 0; s < n; s++) {
          // 해당 회차 해당 등수에 해당 학생이 있다면?
          // i번 학생과 j번 학생의 등수 결정
          if (test[k][s] === i) pi = s;
          if (test[k][s] === j) pj = s;
        }
        if (pi < pj) cnt++;
      }
      if (cnt === m) {
        // 모든 테스트에서 멘토가 멘티보다 등수가 높다면
        answer++;
        // 페어를 확인하고 싶다면
        tmp.push([i, j]);
      }
    }
  }
};

console.log(
  solution([
    [3, 4, 1, 2],
    [4, 3, 2, 1],
    [3, 1, 4, 2],
  ])
);
