/*
[뮤직비디오 (결정알고리즘)]
지니레코드에서는 불세출의 가수 조영필의 라이브 동영상을 DVD로 만들어 판매하려 한다.
DVD에는 총 N개의 곡이 들어가는데, DVD에 녹화할 때에는 라이브에서의 순서가 그대로 유지 되어야 한다. 
순서가 바뀌는 것을 우리의 가수 조영필씨가 매우 싫어한다. 
즉, 1번 노래와 5번 노래를 같은 DVD에 녹화하기 위해서는 1번과 5번 사이의 모든 노래도 같은 DVD에 녹화해야 한다. 
또한 한 노래를 쪼개서 두 개의 DVD에 녹화하면 안된다.
지니레코드 입장에서는 이 DVD가 팔릴 것인지 확신할 수 없기 때문에 이 사업에 낭비되는 DVD를 가급적 줄이려고 한다. 
고민 끝에 지니레코드는 M개의 DVD에 모든 동영상을 녹화하기로 하였다. 
이 때 DVD의 크기(녹화 가능한 길이)를 최소로 하려고 한다. 
그리고 M개의 DVD는 모두 같은 크기여야 제조원가가 적게 들기 때문에 꼭 같은 크기로 해야 한다.
*/

/*
🥸 예상 풀이법
9개면 3개로 쪼개서 녹음하면 되는 것 아닌가..? 문제 이해를 못한듯

> 번호가 곧 노래의 길이를 의미하는 거였다..!

1. 전체를 reduce로 더한다.
2. sum 값을 m으로 나눈다.
3. 2번 결과보다 같거나 작을 때까지 앞에서부터 더한다.
4. m-1개가 완성되면 나머지를 하나로 묶는다.
5. 나머지 배열의 합이 2번 결과보다 작으면 2번 결과가, 크면 해당 값이 최소 용량 크기가 된다. 

🚩 해답
결정 알고리즘 사용하기
1. lt의 최솟값은 가장 긴 노래의 길이여야 한다. (Math.max(arr))
2. rt의 최댓값은 arr 모든 요소의 합이여야 한다. (arr.reduce((sum, num) => sum + num))
3. lt와 rt를 더해 2로 나눈 값을 mid로 설정하고 이분 검색을 시작한다.
4. mid가 앞에서부터 더해서 m장에 해당 곡들을 담을 수 있는지 확인한다.
   - m보다 적은 수로 담을 수 있다면 답으로 가능하다. > answer에 mid 값 저장
5. 최소 용량을 찾아야한다.
   - rt를 mid-1로 설정하고 이분 검색을 다시 시작한다.
   - 가능한 묶음이 m보다 적으면 가능한 답이고, 최소 용량을 찾기 위해 해당 과정을 반복한다.
6. 가능한 묶음이 m보다 많아지면 검색을 멈추고 이전 값을 return 한다.
*/

// c(용량)으로 songs를 모두 담으려면 DVD가 몇 장 필요한지 구하는 함수
const handleCount = (songs, c) => {
  // 여기가 중요!!
  let cnt = 1,
    sum = 0;
  for (let x of songs) {
    // 우선 DVD 한 장은 있는 상태에서 계산 시작
    if (sum + x > c) {
      // sum에 새로운 값을 더했을 때 가능한 용량을 넘어갈 경우
      // DVD를 한 장 추가하고 새로 sum 시작
      cnt++;
      sum = x;
    } else sum += x; // 아니면 sum에 그냥 더해주기
  }
  return cnt;
};

const solution = (m, arr) => {
  let answer;
  let lt = Math.max(...arr);
  let rt = arr.reduce((sum, num) => sum + num, 0);
  while (lt <= rt) {
    let mid = parseInt((lt + rt) / 2); // 외우자!
    if (handleCount(arr, mid) <= m) {
      answer = mid;
      rt = mid - 1;
    } else lt = mid + 1; // 용량이 너무 작았다는 뜻이므로
  }
};

console.log(solution(3, [1, 2, 3, 4, 5, 6, 7, 8, 9]));
